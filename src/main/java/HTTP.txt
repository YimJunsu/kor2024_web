[ HTTP ]
    1. 웹 통신 규약/규칙/약속, 하이퍼텍스트(HyperText Transfer Protocol)
        --> 문자타입의 자료만 통신이 가능하다. 즉) 객체타입의 자료는 통신이 불가능하다.

    2. 특징
        1. 상태가 무상태 프로토콜이다. (상태가 없는 (저장기능이 따로 없다.))
        2. 독립적이다, 이전 요청과 현재 요청은 다르므로 서로 관련이 없다.
        3. TCP/IP 프로토콜의 종속되어 동작하며 port는 80을 사용한다.
    3.
        URL : 웹 주소, 네트워크 상의 자료가 어디에 있는지 알려주는 규약
        URI : 각종 자료들의 유일한 이름이나 위치를 표시하는 규약, URL + 자원포함

    4. HTTPS : HTTP의 보안이 강화된 버전이다.
        - 통신의 인증과 암호화를 위해 만들어진 프로토콜
        - 인증서 발급 업체로 부터 인증서 발급받는다. ex) 건강보험, 자동차보험 처럼 홈페이지의 보험 체계

    5. HTTP Header ( HTTP 통신 정보 )
        1. HTTP METHOD          : http 이용한 통신 요청시 http통신 분류하는 함수.
        2. HTTP HOST            : http 이용한 통신 요청 하는 받는 서버의 URL 주소.
        3. HTTP CONTENT-TYPE    : http 이용한 요청과 응답시 보내는 데이터의 타입 정보.
            - application/json, text/html 등등
        4. HTTP BODY            : http 이용한 보내는 데이터의 내용/본문, POST/PUT 사용가능, GET/DELETE 사용불가능.

    6. HTTP Method
        1. Get      : REST API(HTTP) 에서는 자로 자원 호출 요청 [R]
        2. Post     : REST API 에서는 주로 자원 저장 요청 [C]
        3. Put      : REST API 에서는 주로 자원 수정 요청 [U]
        4. Delete   : REST API 에서는 주로 자원 삭제 요청 [D]

    7. HTTP 사용하는 소프트웨어, 라이브러리, 프레임워크
        1. 브라우저(크롬, 엣지, 사파리) 2.fetch함수 3. spring web(톰캣서버) 등등

    8. HTTP 통신을 테스트 하는 방법 *
        1. 인터넷 구글에서 'talend api' 검색
        2. https://chromewebstore.google.com/detail/talend-api-tester-free-ed/aejoelaoggembcahagimdiliamlcdmfm?hl=ko&pli=1
        3. [확장 프로그램 추가]

        [ talend api 사용하기 ]
        1. [ 크롬 브라우저 ] -> [ 확장 프로그램 ] -> 'talend api' 클릭 ( 없으면 설치가 안된 상태 )
        2. HTTP URL 테스트하기

    9. HTTP를 이용한 데이터 통신
        request 요청
            + 데이터 보내는 방법 2가지
                1) 쿼리스트링 방식, url 경로상의 ? 이용하여 경로와 매개변수 구분
                    1. URL ? 매개변수명1=값1 & 매개변수명2=값2
                    - http://localhost:8080/findid?bno=1

                        ?부터 쿼리스트링 시작괸다.
                    2. Controller 메소드에서 URL 상의 쿼리스트링 매개변수 반환방법
                        - 메소드명(@RequestParam 타입 매개변수명(){}
                        - 메소드명( 타입 매개변수명 ) { }
                            - http://localhost:8080/findid?bno=1
                            - 메소드명(int bno) {}
                2) body 방식, header 안에 내용물 추가하는 방법,
                    - HTTP method의 POST와 PUT만 body를 사용할 수 있다. 즉) GET, DElETE는 body가 없다.
                    1. 쿼리스트링과 다르게 URL 경로상의 데이터를 표시하지 않는다. [ 쿼리스트링 방식보다 보안성이 좋다.]
                        - body의 content-type 명시하여 데이터를 보내준다.
                        - 주로 content-type : 'application/json'  : JSON(자바스크립트 객체)
                    2. content-type : 'application/json' 으로 하고 body에 {'속성명':값, '속성명' : 값}

                    3. Controller 메소드에서 body의 데이터를 매개변수로 반환 방법
                        - 메소드명(@RequestBody 타입 매개변수명) { }
        response 응답




[실습1] spring web에서 post, get, put, delete 메소드를 사용하는 HTTP 통신 주소 만들기

                     내 pc, 톰켓서버
        사용자 -------> SPRING WEB
                      localhost:8080

        사용자 -------> http://localhost:8080

        사용자 ------> postMethod() 실행
            [POST] http://localhost:8080/day52

        사용자 -----> getMethod() 실행
            [GET] http://localhost:8080/day52

        사용자 -----> putMethod() 실행
            [PUT] http://localhost:8080/day52

        사용자 -----> deleteMethod() 실행
            [DELETE] http://localhost:8080/day52

